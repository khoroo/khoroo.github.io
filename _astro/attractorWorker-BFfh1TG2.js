const Y=l=>{console.log("Starting attractor drawing with Canvas...");const a=l.getContext("2d");if(!a){console.error("Could not get 2D context");return}const f="black";let s=l.width,o=l.height;a.clearRect(0,0,s,o);const t=.6,c=.995,m=2.25,y=7.75,C=1e3,i=[],g=[];let e=m,h=y;for(let d=0;d<C;d++){i.push(e),g.push(h);const n=c*h+t*e+2*(1-t)*e*e/(1+e*e),x=-e+t*n+2*(1-t)*n*n/(1+n*n);e=n,h=x}const u=Math.min(...i),v=Math.max(...i),w=Math.min(...g),I=Math.max(...g);a.fillStyle=f,i.forEach((d,n)=>{const x=g[n],M=(d-u)/(v-u)*s,X=o-(x-w)/(I-w)*o;a.fillRect(M,X,1,1)}),console.log("Attractor drawing completed successfully")};let r=null,p=null;self.onmessage=async l=>{const a=l.data;if(a.type==="init"){const{canvas:f,width:s,height:o,dpr:t}=a,c=f.getContext("2d");if(!c){console.error("Failed to get context from transferred canvas");return}if(c.scale(t,t),!r){console.log("Creating new persistent canvas"),r=new OffscreenCanvas(s,o),Y(r);try{p=await createImageBitmap(r)}catch(m){console.error("Failed to create bitmap from persistent canvas",m)}}p?c.drawImage(p,0,0,s/t,o/t):r&&c.drawImage(r,0,0,s/t,o/t)}};
